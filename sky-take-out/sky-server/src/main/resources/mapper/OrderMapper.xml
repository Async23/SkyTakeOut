<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" parameterType="com.sky.entity.Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders
        (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark,
         phone, address, consignee, estimated_delivery_time, delivery_status, pack_amount, tableware_number,
         tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee},
                #{estimatedDeliveryTime}, #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>

    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>


    <!--根据 id 查询订单详情-->
    <resultMap id="orderVO" type="com.sky.vo.OrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="orderDetailList" javaType="java.util.ArrayList" ofType="com.sky.entity.OrderDetail">
            <id column="odId" property="id"/>
            <result column="odNumber" property="number"/>
        </collection>
    </resultMap>
    <select id="selectById" resultMap="orderVO" parameterType="java.lang.Long">
        select o.id                      as id,
               o.number                  as number,
               o.status                  as status,
               o.user_id                 as userId,
               o.address_book_id         as addressBookId,
               o.order_time              as orderTime,
               o.checkout_time           as checkoutTime,
               o.pay_method              as payMethod,
               o.pay_status              as payStatus,
               o.amount                  as amount,
               o.remark                  as remark,
               o.phone                   as phone,
               o.address                 as address,
               o.user_name               as userName,
               o.consignee               as consignee,
               o.cancel_reason           as cancelReason,
               o.rejection_reason        as rejectionReason,
               o.cancel_time             as cancelTime,
               o.estimated_delivery_time as estimatedDeliveryTime,
               o.delivery_status         as deliveryStatus,
               o.delivery_time           as deliveryTime,
               o.pack_amount             as packAmount,
               o.tableware_number        as tablewareNumber,
               o.tableware_status        as tablewareStatus,
               od.id                     as odId,
               od.name                   as name,
               od.image                  as image,
               od.order_id               as orderId,
               od.dish_id                as dishId,
               od.setmeal_id             as setmealId,
               od.dish_flavor            as dishFlavor,
               od.number                 as odNumber,
               od.amount                 as amount
        from orders as o
                 inner join order_detail as od on o.id = od.order_id
        where o.id = #{id}
    </select>

    <!--订单条件搜索-->
    <select id="listByCondition" resultMap="orderVO" parameterType="com.sky.dto.OrdersPageQueryDTO">
        select o.id as id,
        o.number as number,
        o.status as status,
        o.user_id as userId,
        o.address_book_id as addressBookId,
        o.order_time as orderTime,
        o.checkout_time as checkoutTime,
        o.pay_method as payMethod,
        o.pay_status as payStatus,
        o.amount as amount,
        o.remark as remark,
        o.phone as phone,
        o.address as address,
        o.user_name as userName,
        o.consignee as consignee,
        o.cancel_reason as cancelReason,
        o.rejection_reason as rejectionReason,
        o.cancel_time as cancelTime,
        o.estimated_delivery_time as estimatedDeliveryTime,
        o.delivery_status as deliveryStatus,
        o.delivery_time as deliveryTime,
        o.pack_amount as packAmount,
        o.tableware_number as tablewareNumber,
        o.tableware_status as tablewareStatus,
        od.id as odId,
        od.name as name,
        od.image as image,
        od.order_id as orderId,
        od.dish_id as dishId,
        od.setmeal_id as setmealId,
        od.dish_flavor as dishFlavor,
        od.number as odNumber,
        od.amount as amount
        from orders as o
        inner join order_detail as od on o.id = od.order_id
        <where>
            <if test="number != null and number != ''">
                number like concat('%',#{number},'%')
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="beginTime != null and endTime != null">
                and order_time between #{beginTime} and #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>

    <!--各个状态的订单数量统计-->
    <select id="statistics" resultType="com.sky.vo.OrderStatisticsVO">
        select sum(if(status_cut = 'toBeConfirmed', count, 0))      as toBeConfirmed,
               sum(if(status_cut = 'confirmed', count, 0))          as confirmed,
               sum(if(status_cut = 'deliveryInProgress', count, 0)) as deliveryInProgress
        from (select case
                         when status = 2 then 'toBeConfirmed'
                         when status = 3 then 'confirmed'
                         when status = 4 then 'deliveryInProgress'
                         end      status_cut,
                     count(id) as count
              from orders
              group by status) as t_status
    </select>

    <!--根据状态和下单时间查询订单-->
    <select id="getByStatusAndOrdertimeLT" resultType="com.sky.entity.Orders">
        select *
        from orders
        where status = #{status}
          and order_time &lt;= #{orderTime}
    </select>

    <!--根据订单号和用户id查询订单-->
    <select id="selectByNumberAndUserId" resultType="com.sky.entity.Orders">
        select *
        from orders
        where number = #{orderNumber}
          and user_id = #{userId}
    </select>

    <!--根据动态条件统计营业额-->
    <select id="sumByMap" resultType="java.lang.Double" parameterType="java.util.Map">
        select sum(amount) from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
        </where>
    </select>

    <!--获得订单总数 totalOrderCount，有效订单数 validOrderCountList，订单完成率 orderCompletionRate-->
    <select id="selectOrderCounts" parameterType="java.util.Map" resultType="java.util.Map">
        select validOrderCount,
               totalOrderCount,
               if(validOrderCount / totalOrderCount is null, 0,
                  round(validOrderCount / totalOrderCount * 100)) as orderCompletionRate
        from (select count(status = 5) as validOrderCount,
                     count(id)         as totalOrderCount
              from orders
              where order_time between #{begin} and #{end}) as t_temp
    </select>

    <!--查询日期区间内、符合状态的订单数量-->
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="map.begin != null">
                and order_time &gt;= #{map.begin}
            </if>
            <if test="map.end != null">
                and order_time &lt;= #{map.end}
            </if>
        </where>
    </select>

    <!--查询销量排名top10接口-->
    <select id="top10" resultType="java.util.Map">
        select name, sum(od.number) as number
        from orders as o
                 join order_detail od on o.id = od.order_id
        where order_time between #{begin} and #{end}
        group by name
        order by sum(od.number) desc
        limit 0,10
    </select>

    <!--计算时间段内营业额-->
    <select id="sumMap" resultType="java.lang.Double" parameterType="java.util.Map">
        select if(sum(amount) is null, 0, sum(amount))
        from orders
        where order_time between #{map.begin} and #{map.end}
          and status = 5
    </select>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.DishMapper">

    <resultMap id="dishVO" type="com.sky.vo.DishVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="categoryId" property="categoryId"/>
        <result column="price" property="price"/>
        <result column="image" property="image"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="updateTime" property="updateTime"/>
        <result column="categoryName" property="categoryName"/>
        <collection property="flavors" javaType="ArrayList" ofType="com.sky.entity.DishFlavor">
            <result column="flavorId" property="id"/>
            <result column="dishId" property="dishId"/>
            <result column="dfName" property="name"/>
            <result column="value" property="value"/>
        </collection>
    </resultMap>

    <!--新增菜品(dish)-->
    <insert id="insertDish" parameterType="com.sky.entity.Dish" useGeneratedKeys="true" keyProperty="id">
        insert into dish
        (name, category_id, price, image, description, status, create_time, update_time, create_user, update_user) value
            (#{name}, #{categoryId}, #{price}, #{image}, #{description}, #{status}, #{createTime}, #{updateTime},
             #{createUser}, #{updateUser})
    </insert>
    <!--新增菜品(dish_flavor)-->
    <insert id="insertDishFlavor" parameterType="java.util.List">
        insert into dish_flavor
        (dish_id, name, value) values
        <foreach collection="dishFlavors" item="dishFlavor" separator=",">
                (#{dishFlavor.dishId}, #{dishFlavor.name}, #{dishFlavor.value})
        </foreach>
    </insert>

    <!--更新菜品(Dish)-->
    <update id="updateDish" parameterType="com.sky.entity.Dish">
        update dish
        <set>
            <if test="name != null and name != ''">
                name =
                #{name},
            </if>
            <if test="categoryId != null">
                category_id =
                #{categoryId},
            </if>
            <if test="price != null">
                price =
                #{price},
            </if>
            <if test="image != null and image != ''">
                image =
                #{image},
            </if>
            <if test="description != null and description != ''">
                description =
                #{description},
            </if>
            <if test="status != null">
                status =
                #{status},
            </if>
            <if test="updateTime != null">
                update_time =
                #{updateTime},
            </if>
            <if test="updateUser != null">
                update_user =
                #{updateUser}
            </if>
        </set>
        where id = #{id}
    </update>
    <!--更新菜品(dish_flavor)-->
    <update id="updateDishFlavor" parameterType="java.util.List">
        insert into dish_flavor
        (dish_id, name, value) values
        <foreach collection="dishFlavors" item="dishFlavor" separator=",">
                (#{dishFlavor.dishId}, #{dishFlavor.name}, #{dishFlavor.value})
        </foreach>
    </update>
    <!--删除口味(dish_flavor)-->
    <delete id="deleteDishFlavor" parameterType="java.lang.Long">
        delete
        from dish_flavor
        where dish_id = #{dishId}
    </delete>

    <select id="selectFlavors" resultType="com.sky.entity.DishFlavor" parameterType="java.lang.Long">
        select id, dish_id, name, value
        from dish_flavor
        where id = #{flavorId}
    </select>

    <!--名称、分类、状态条件查询-->
    <select id="selectByNameOrCategoryIdOrStatus" resultType="com.sky.vo.DishVO">
        select
        d.id as id,
        d.name as name,
        d.category_id as categoryId,
        d.price as price,
        d.image as image,
        d.description as description,
        d.status as status,
        d.update_time as updateTime,
        c.name as categoryName
        from dish as d
        left outer join category as c on d.category_id = c.id
        where
        d.is_delete = 0
        <if test="name != null and name != ''">
            and d.name like concat('%',
            #{name},
            '%'
            )
        </if>
        <if test="categoryId != null">
            and d.category_id =
            #{categoryId}
        </if>
        <if test="status != null">
            and d.status =
            #{status}
        </if>
        order by d.update_time desc
    </select>

    <!--查询所有-->
    <select id="selectAll" resultMap="dishVO">
        select d.id          as id,
               d.name        as name,
               d.category_id as categoryId,
               d.price       as price,
               d.image       as image,
               d.description as description,
               d.status      as status,
               d.update_time as updateTime,
               c.name        as categoryName,
               df.id         as flavorId,
               df.dish_id    as dishId,
               df.name       as dfName,
               df.value      as value
        from dish as d
                 left outer join category as c on d.category_id = c.id
                 left outer join dish_flavor as df on d.id = df.dish_id
        where d.is_delete = 0
        order by d.update_time desc
    </select>

    <!--根据 id 查询-->
    <select id="selectById" resultMap="dishVO" parameterType="java.lang.Long">
        select d.id          as id,
               d.name        as name,
               d.category_id as categoryId,
               d.price       as price,
               d.image       as image,
               d.description as description,
               d.status      as status,
               d.update_time as updateTime,
               c.name        as categoryName,
               df.id         as flavorId,
               df.dish_id    as dishId,
               df.name       as dfName,
               df.value      as value
        from dish as d
                 left outer join category as c on d.category_id = c.id
                 left outer join dish_flavor as df on d.id = df.dish_id
        where d.is_delete = 0
          and d.id = #{id}
    </select>

</mapper>